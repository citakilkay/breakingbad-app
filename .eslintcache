[{"C:\\Users\\ASUS\\Desktop\\koding\\coursera\\reacties\\breakingbad-app\\src\\index.js":"1","C:\\Users\\ASUS\\Desktop\\koding\\coursera\\reacties\\breakingbad-app\\src\\App.js":"2","C:\\Users\\ASUS\\Desktop\\koding\\coursera\\reacties\\breakingbad-app\\src\\reportWebVitals.js":"3","C:\\Users\\ASUS\\Desktop\\koding\\coursera\\reacties\\breakingbad-app\\src\\components\\SearcBar.js":"4","C:\\Users\\ASUS\\Desktop\\koding\\coursera\\reacties\\breakingbad-app\\src\\components\\CardCharacter.js":"5","C:\\Users\\ASUS\\Desktop\\koding\\coursera\\reacties\\breakingbad-app\\src\\components\\CharacterList.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":1434,"mtime":1612213527447,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":557,"mtime":1612211305823,"results":"11","hashOfConfig":"8"},{"size":1247,"mtime":1612213344645,"results":"12","hashOfConfig":"8"},{"size":674,"mtime":1612213095908,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"8wub5n",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\ASUS\\Desktop\\koding\\coursera\\reacties\\breakingbad-app\\src\\index.js",[],["29","30"],"C:\\Users\\ASUS\\Desktop\\koding\\coursera\\reacties\\breakingbad-app\\src\\App.js",["31"],"import axios from 'axios';\nimport './App.css';\nimport logo from './images/logo-bb.png';\nimport SearchBar from './components/SearcBar';\nimport {useState, useEffect} from 'react';\nimport CharacterList from './components/CharacterList';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './styles/style.css';\nfunction App() {\n  const [characters,setCharacters] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [searchQuery,setSearchQuery] = useState(\"\");\n  useEffect(async () => {\n    const result = await axios(`https://www.breakingbadapi.com/api/characters`);\n    setCharacters(result.data);\n    setIsLoading(false);\n  },[]);\n  const searchCharacter = (e) => {\n    setSearchQuery(e.target.value);\n    console.log(searchQuery);\n  }\n  var filteredCharacters = characters.filter(\n    character => { return ((character.name.toLowerCase().indexOf(searchQuery.toLowerCase()) !== -1) || (character.nickname.toLowerCase().indexOf(searchQuery.toLowerCase()) !== -1) ) }\n  )\n  return (\n    <div className=\"App\">\n      {/*() => return( isLoading ? <img src={LoadingGif} alt=\"loading-gif\" /> : 0);*/}\n      <div className=\"container-sm\">\n        <img src={logo} alt=\"logo\" className=\"m-4 logo-img\"/>\n        <SearchBar searchCharacter={searchCharacter}/>\n        <CharacterList characters={filteredCharacters} searchCharacter={searchCharacter} isLoading={isLoading}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\ASUS\\Desktop\\koding\\coursera\\reacties\\breakingbad-app\\src\\reportWebVitals.js",[],"C:\\Users\\ASUS\\Desktop\\koding\\coursera\\reacties\\breakingbad-app\\src\\components\\SearcBar.js",[],"C:\\Users\\ASUS\\Desktop\\koding\\coursera\\reacties\\breakingbad-app\\src\\components\\CardCharacter.js",["32"],"const CardCharacter = ({ character }) => {\r\n    var googleSearch = \"https://www.google.com/search?q=\" + `${character.name}`;\r\n    return (\r\n\r\n        <a className=\"card my-5\" href={googleSearch} target=\"_blank\" rel= \"noopener noreferrer\">\r\n            <div className=\"card-inner\">\r\n                <div className=\"card-front\">\r\n                    <img className=\"card-image\" src={character.img} alt={character.name} />\r\n                </div>\r\n                <div className=\"card-back mt-3 px-1\">\r\n                    <h3 className=\"my-2\">{character.name}</h3>\r\n                    <p className=\"my-1\"><strong className=\"text-title\">Played By: </strong>{character.portrayed}</p>\r\n                    <p className=\"my-1\"><strong className=\"text-title\">Nick Name: </strong>{character.nickname}</p>\r\n                    <p className=\"my-1\"><strong className=\"text-title\">Occupation: </strong>{character.occupation}</p>\r\n                    <p className=\"my-1\"><strong className=\"text-title\">Status: </strong>{character.status}</p>\r\n                    <p className=\"my-1\"><strong className=\"text-title\">Birthday: </strong>{character.birthday}</p>\r\n                </div>\r\n            </div>\r\n        </a>\r\n\r\n    );\r\n}\r\nexport default CardCharacter;","C:\\Users\\ASUS\\Desktop\\koding\\coursera\\reacties\\breakingbad-app\\src\\components\\CharacterList.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":13,"column":13,"nodeType":"39","endLine":17,"endColumn":4},{"ruleId":"40","severity":1,"message":"41","line":2,"column":59,"nodeType":"42","messageId":"43","endLine":2,"endColumn":60},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation"]